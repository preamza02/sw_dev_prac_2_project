/* tslint:disable */
/* eslint-disable */
/**
 * Hotel Booking and Authentication API
 * API for managing hotels, bookings, and user authentication
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import { UserFromJSON, UserFromJSONTyped, UserToJSON } from './User';
import type { Hotel } from './Hotel';
import { HotelFromJSON, HotelFromJSONTyped, HotelToJSON } from './Hotel';

/**
 *
 * @export
 * @interface Booking
 */
export interface Booking {
  /**
   *
   * @type {string}
   * @memberof Booking
   */
  id?: string;
  /**
   * Booking start date
   * @type {Date}
   * @memberof Booking
   */
  bookingDate?: Date;
  /**
   * Booking end date
   * @type {Date}
   * @memberof Booking
   */
  checkoutDate?: Date;
  /**
   *
   * @type {Hotel}
   * @memberof Booking
   */
  hotel?: Hotel;
  /**
   *
   * @type {User}
   * @memberof Booking
   */
  user?: User;
}

/**
 * Check if a given object implements the Booking interface.
 */
export function instanceOfBooking(value: object): value is Booking {
  return true;
}

export function BookingFromJSON(json: any): Booking {
  return BookingFromJSONTyped(json, false);
}

export function BookingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Booking {
  if (json == null) {
    return json;
  }
  return {
    id: json['_id'] == null ? undefined : json['_id'],
    bookingDate: json['bookingDate'] == null ? undefined : new Date(json['bookingDate']),
    checkoutDate: json['checkoutDate'] == null ? undefined : new Date(json['checkoutDate']),
    hotel: json['hotel'] == null ? undefined : HotelFromJSON(json['hotel']),
    user: json['user'] == null ? undefined : UserFromJSON(json['user']),
  };
}

export function BookingToJSON(value?: Booking | null): any {
  if (value == null) {
    return value;
  }
  return {
    _id: value['id'],
    bookingDate:
      value['bookingDate'] == null
        ? undefined
        : value['bookingDate'].toISOString().substring(0, 10),
    checkoutDate:
      value['checkoutDate'] == null
        ? undefined
        : value['checkoutDate'].toISOString().substring(0, 10),
    hotel: HotelToJSON(value['hotel']),
    user: UserToJSON(value['user']),
  };
}
